{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","map","option","type","onClick","className","styles","btn","makeFirstLetterBig","str","toUpperCase","slice","Section","title","children","Statistics","good","neutral","bad","total","positivePercentage","wrapper","span","div","p","Notification","message","App","state","name","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","result","Math","floor","app","Object","keys","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,QAAU,4BAA4B,KAAO,yBAAyB,IAAM,wBAAwB,EAAI,wB,oLCE3G,SAASC,EAAT,GAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBACjD,OAAOD,EAAQE,KAAI,SAAAC,GAAM,OACvB,wBACEC,KAAK,SACLC,QAAS,kBAAMJ,EAAgBE,IAC/BG,UAAWC,IAAOC,IAHpB,SAMGC,EAAmBN,IAFfA,MAOX,SAASM,EAAmBC,GAC1B,OAAKA,EAEEA,EAAI,GAAGC,cAAgBD,EAAIE,MAAM,GAFvBF,ECfJ,SAASG,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,gCACE,6BAAKD,IACJC,K,oBCHQ,SAASC,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,sBAAKf,UAAWC,IAAOe,QAAvB,UACE,uBAAMhB,UAAWC,IAAOgB,KAAxB,mBAAqCN,KACrC,uBAAMX,UAAWC,IAAOgB,KAAxB,sBAAwCL,KACxC,uBAAMZ,UAAWC,IAAOgB,KAAxB,kBAAoCJ,KACpC,sBAAKb,UAAWC,IAAOiB,IAAvB,UACE,oBAAGlB,UAAWC,IAAOkB,EAArB,oBAAgCL,KAChC,oBAAGd,UAAWC,IAAOkB,EAArB,gCAA4CJ,EAA5C,aCfO,SAASK,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,+BAAOA,I,ICKKC,E,4MACnBC,MAAQ,CAAEZ,KAAM,EAAGC,QAAS,EAAGC,IAAK,G,EAEpClB,gBAAkB,SAAA6B,GAChB,EAAKC,UAAS,SAAAC,GAAS,sBAAQF,EAAOE,EAAUF,GAAQ,O,EAG1DG,mBAAqB,WACnB,MAA+B,EAAKJ,MACpC,OADA,EAAQZ,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzBe,gCAAkC,WAChC,IACMC,EADW,EAAKN,MAAdZ,KACe,EAAKgB,qBAAwB,IACpD,OAAKE,EAGEC,KAAKC,MAAMF,GAFT,G,4CAKX,WACE,OACE,sBAAK7B,UAAWC,IAAO+B,IAAvB,UACE,cAACzB,EAAD,CAASC,MAAM,wBAAf,SACE,cAACf,EAAD,CACEC,QAASuC,OAAOC,KAAKC,KAAKZ,OAC1B5B,gBAAiBwC,KAAKxC,oBAI1B,cAACY,EAAD,CAASC,MAAM,aAAf,SACG2B,KAAKR,qBACJ,cAACjB,EAAD,CACEC,KAAMwB,KAAKZ,MAAMZ,KACjBC,QAASuB,KAAKZ,MAAMX,QACpBC,IAAKsB,KAAKZ,MAAMV,IAChBC,MAAOqB,KAAKR,qBACZZ,mBAAoBoB,KAAKP,oCAG3B,cAACR,EAAD,CAAcC,QAAQ,+B,GAzCDe,a,MCFjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,sCCT1BlD,EAAOC,QAAU,CAAC,IAAM,gC","file":"static/js/main.888f7c3c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Statistics_wrapper__3G3F1\",\"span\":\"Statistics_span__1-fG1\",\"div\":\"Statistics_div__JW-Cs\",\"p\":\"Statistics_p__2-cUe\"};","import PropTypes from 'prop-types';\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\nexport default function FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return options.map(option => (\r\n    <button\r\n      type=\"button\"\r\n      onClick={() => onLeaveFeedback(option)}\r\n      className={styles.btn}\r\n      key={option}\r\n    >\r\n      {makeFirstLetterBig(option)}\r\n    </button>\r\n  ));\r\n}\r\n\r\nfunction makeFirstLetterBig(str) {\r\n  if (!str) return str;\r\n\r\n  return str[0].toUpperCase() + str.slice(1);\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <div>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css';\r\n\r\nexport default function Statistics({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n}) {\r\n  return (\r\n    <div className={styles.wrapper}>\r\n      <span className={styles.span}>Good: {good}</span>\r\n      <span className={styles.span}>Neutral: {neutral}</span>\r\n      <span className={styles.span}>Bad: {bad}</span>\r\n      <div className={styles.div}>\r\n        <p className={styles.p}>Total: {total}</p>\r\n        <p className={styles.p}>Positive feedback: {positivePercentage}%</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default function Notification({ message }) {\r\n  return <span>{message}</span>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import { React, Component } from 'react';\nimport styles from './App.css';\n\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Section from './components/Section/Section';\nimport Statistics from './components/Statistics/Statistics';\nimport Notification from './components/Notification/Notification';\n\nexport default class App extends Component {\n  state = { good: 0, neutral: 0, bad: 0 };\n\n  onLeaveFeedback = name => {\n    this.setState(prevState => ({ [name]: prevState[name] + 1 }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    const result = (good / this.countTotalFeedback()) * 100;\n    if (!result) {\n      return 0;\n    }\n    return Math.floor(result);\n  };\n\n  render() {\n    return (\n      <div className={styles.app}>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() ? (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__skUk4\"};"],"sourceRoot":""}